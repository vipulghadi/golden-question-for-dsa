 int isPossible(vector<int>&arr,int n,int k,int mid)
    {
        int count=1,pre_dist=arr[0];
          
          for(int j=1;j<n;j++)
          {
              
               if((arr[j]-pre_dist)<mid)continue;
              else
              {
                  count++;
                  pre_dist=arr[j];
              }
          }
          if(count>=k)return 1;
          return 0;
 
    }



    int solve(int n, int k, vector<int> &arr)
    {
      sort(arr.begin(),arr.end());
      int l=1,r=arr[n-1]-l;
      int ans=0;
      while(l<=r)
      {
          int mid=(l+r)/2;
          if(isPossible(arr,n,k,mid))
          {ans=mid;
              l=mid+1;
          }
          else
          {
              r=mid-1;
          }
      }
      return  ans;
    }
